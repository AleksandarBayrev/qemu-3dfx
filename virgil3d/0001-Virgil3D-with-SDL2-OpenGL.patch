diff -Nru ../orig/qemu-6.2.0/configure ./configure
--- ../orig/qemu-6.2.0/configure	2021-12-14 12:42:02.000000000 -0800
+++ ./configure	2021-12-15 20:32:44.388305700 -0800
@@ -2605,18 +2611,7 @@
 # opengl probe (for sdl2, gtk)

 if test "$opengl" != "no" ; then
-  epoxy=no
   if $pkg_config epoxy; then
-    cat > $TMPC << EOF
-#include <epoxy/egl.h>
-int main(void) { return 0; }
-EOF
-    if compile_prog "" "" ; then
-      epoxy=yes
-    fi
-  fi
-
-  if test "$epoxy" = "yes" ; then
     opengl_cflags="$($pkg_config --cflags epoxy)"
     opengl_libs="$($pkg_config --libs epoxy)"
     opengl=yes
@@ -2630,6 +2625,16 @@
   fi
 fi

+if test "$opengl" = "yes"; then
+  cat > $TMPC << EOF
+#include <epoxy/egl.h>
+int main(void) { return 0; }
+EOF
+  if compile_prog "" "" ; then
+    egl=yes
+  fi
+fi
+
 ##########################################
 # libnuma probe

@@ -3578,6 +3583,9 @@
   echo "CONFIG_OPENGL=y" >> $config_host_mak
   echo "OPENGL_CFLAGS=$opengl_cflags" >> $config_host_mak
   echo "OPENGL_LIBS=$opengl_libs" >> $config_host_mak
+  if test "$egl" = "yes" ; then
+    echo "CONFIG_EGL=y" >> $config_host_mak
+  fi
 fi

 if test "$avx2_opt" = "yes" ; then
diff -Nru ../orig/qemu-6.2.0/include/ui/egl-helpers.h ./include/ui/egl-helpers.h
--- ../orig/qemu-6.2.0/include/ui/egl-helpers.h	2021-12-14 12:42:02.000000000 -0800
+++ ./include/ui/egl-helpers.h	2021-12-15 20:42:32.702777300 -0800
@@ -2,7 +2,15 @@
 #define EGL_HELPERS_H

 #include <epoxy/gl.h>
+#ifdef CONFIG_EGL
 #include <epoxy/egl.h>
+#else
+typedef int EGLConfig;
+typedef int EGLContext;
+typedef int EGLDisplay;
+typedef int EGLNativeWindowType;
+typedef int EGLSurface;
+#endif
 #ifdef CONFIG_GBM
 #include <gbm.h>
 #endif
diff -Nru ../orig/qemu-6.2.0/meson.build ./meson.build
--- ../orig/qemu-6.2.0/meson.build	2021-12-14 12:42:02.000000000 -0800
+++ ./meson.build	2021-12-15 20:35:41.043528400 -0800
@@ -3418,6 +3427,7 @@
 summary_info += {'libusb':            libusb}
 summary_info += {'usb net redir':     usbredir}
 summary_info += {'OpenGL support':    config_host.has_key('CONFIG_OPENGL')}
+summary_info += {'EGL':               config_host.has_key('CONFIG_EGL')}
 summary_info += {'GBM':               gbm}
 summary_info += {'libiscsi support':  libiscsi}
 summary_info += {'libnfs support':    libnfs}
diff -Nru ../orig/qemu-6.2.0/ui/egl-helpers.c ./ui/egl-helpers.c
--- ../orig/qemu-6.2.0/ui/egl-helpers.c	2021-12-14 12:42:02.000000000 -0800
+++ ./ui/egl-helpers.c	2021-12-15 20:44:02.904582600 -0800
@@ -334,6 +334,8 @@

 /* ---------------------------------------------------------------------- */

+#ifdef CONFIG_EGL
+
 EGLSurface qemu_egl_init_surface_x11(EGLContext ectx, EGLNativeWindowType win)
 {
     EGLSurface esurface;
@@ -527,3 +529,5 @@

     return ectx;
 }
+
+#endif //#ifdef CONFIG_EGL
diff -Nru ../orig/qemu-6.2.0/ui/meson.build ./ui/meson.build
--- ../orig/qemu-6.2.0/ui/meson.build	2021-12-14 12:42:02.000000000 -0800
+++ ./ui/meson.build	2021-12-15 20:38:23.311869800 -0800
@@ -53,13 +53,15 @@
   opengl_ss = ss.source_set()
   opengl_ss.add(gbm)
   opengl_ss.add(when: [opengl, pixman, 'CONFIG_OPENGL'],
-               if_true: files('shader.c', 'console-gl.c', 'egl-helpers.c', 'egl-context.c'))
+               if_true: files('shader.c', 'console-gl.c', 'egl-helpers.c'))
+  opengl_ss.add(when: [opengl, pixman, 'CONFIG_OPENGL', 'CONFIG_EGL'],
+               if_true: files('egl-context.c'))
   ui_modules += {'opengl' : opengl_ss}
 endif

 if config_host.has_key('CONFIG_OPENGL') and gbm.found()
   egl_headless_ss = ss.source_set()
-  egl_headless_ss.add(when: [opengl, gbm, pixman, 'CONFIG_OPENGL'],
+  egl_headless_ss.add(when: [opengl, gbm, pixman, 'CONFIG_OPENGL', 'CONFIG_EGL'],
                       if_true: files('egl-headless.c'))
   ui_modules += {'egl-headless' : egl_headless_ss}
 endif
@@ -70,8 +72,10 @@
   gtk_ss = ss.source_set()
   gtk_ss.add(gtk, vte, pixman, files('gtk.c', 'gtk-clipboard.c'))
   gtk_ss.add(when: x11, if_true: files('x_keymap.c'))
-  gtk_ss.add(when: [opengl, 'CONFIG_OPENGL'], if_true: files('gtk-gl-area.c'))
-  gtk_ss.add(when: [x11, opengl, 'CONFIG_OPENGL'], if_true: files('gtk-egl.c'))
+  gtk_ss.add(when: [opengl, 'CONFIG_OPENGL', 'CONFIG_EGL'],
+             if_true: files('gtk-gl-area.c'))
+  gtk_ss.add(when: [x11, opengl, 'CONFIG_OPENGL', 'CONFIG_EGL'],
+             if_true: files('gtk-egl.c'))
   ui_modules += {'gtk' : gtk_ss}
 endif

diff -Nru ../orig/qemu-6.2.0/ui/sdl2-gl.c ./ui/sdl2-gl.c
--- ../orig/qemu-6.2.0/ui/sdl2-gl.c	2021-12-14 12:42:01.000000000 -0800
+++ ./ui/sdl2-gl.c	2021-12-15 20:12:01.001487700 -0800
@@ -170,6 +170,13 @@
 
 void sdl2_gl_destroy_context(DisplayChangeListener *dcl, QEMUGLContext ctx)
 {
+#ifdef CONFIG_DARWIN
+    /* Apple OpenGL FBO blit quirk
+     * Require SDL2 fix in https://github.com/libsdl-org/SDL/issues/4986
+     */
+    struct sdl2_console *scon = container_of(dcl, struct sdl2_console, dcl);
+    SDL_SetWindowPosition(scon->real_window, SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED);
+#endif
     SDL_GLContext sdlctx = (SDL_GLContext)ctx;
 
     SDL_GL_DeleteContext(sdlctx);
diff -Nru ../orig/qemu-6.2.0/ui/sdl2.c ./ui/sdl2.c
--- ../orig/qemu-6.2.0/ui/sdl2.c	2021-12-14 12:42:02.000000000 -0800
+++ ./ui/sdl2.c	2021-12-15 20:50:16.389031600 -0800
@@ -87,6 +87,16 @@
     }
 #ifdef CONFIG_OPENGL
     if (scon->opengl) {
+#if defined(CONFIG_WIN32) || defined(CONFIG_DARWIN)
+        /* On Windows 10 & macOS, SDL2 window with SDL_WINDOW_OPENGL does not
+         * default to OpenGL backend.
+         */
+        SDL_SetHint(SDL_HINT_RENDER_DRIVER, "opengl");
+#ifdef CONFIG_DARWIN
+        /* Apple OpenGL quirk */
+        SDL_GL_SetAttribute(SDL_GL_CONTEXT_PROFILE_MASK, SDL_GL_CONTEXT_PROFILE_CORE);
+#endif
+#endif
         flags |= SDL_WINDOW_OPENGL;
     }
 #endif
