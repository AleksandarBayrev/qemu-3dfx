diff -Nru orig/virglrenderer-virglrenderer-0.10.3/meson.build src/virglrenderer-virglrenderer-0.10.3/meson.build
--- orig/virglrenderer-virglrenderer-0.10.3/meson.build	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/meson.build	2022-10-31 14:29:38.109356600 -0700
@@ -63,10 +63,10 @@
 ]

 add_project_arguments(cc.get_supported_arguments(flags), language : 'c')
+add_project_link_arguments('-static-libgcc', language : 'c')
 
 prog_python = import('python').find_installation('python3')
 
-libdrm_dep = dependency('libdrm', version : '>=2.4.50')
 thread_dep = dependency('threads')
 epoxy_dep = dependency('epoxy', version: '>= 1.5.4')
 m_dep = cc.find_library('m', required : false)
@@ -205,8 +205,9 @@
 
 if with_egl
    if cc.has_header('epoxy/egl.h', dependencies: epoxy_dep) and epoxy_dep.get_pkgconfig_variable('epoxy_has_egl') == '1'
+      libdrm_dep = dependency('libdrm', required: require_egl, version : '>=2.4.50')
       gbm_dep = dependency('gbm', version: '>= ' + _gbm_ver, required: require_egl)
-      have_egl = gbm_dep.found()
+      have_egl = libdrm_dep.found() and gbm_dep.found()
       if (have_egl)
          conf_data.set('HAVE_EPOXY_EGL_H', 1)
       else
@@ -301,7 +302,7 @@
 with_valgrind = get_option('valgrind')
 
 subdir('src')
-subdir('vtest')
+#subdir('vtest')
 
 if with_render_server
 subdir('server')
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/meson.build src/virglrenderer-virglrenderer-0.10.3/src/meson.build
--- orig/virglrenderer-virglrenderer-0.10.3/src/meson.build	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/meson.build	2022-10-31 12:57:14.450654100 -0700
@@ -170,7 +170,6 @@
 virgl_depends = [
    gallium_dep,
    epoxy_dep,
-   libdrm_dep,
    thread_dep,
    m_dep,
 ]
@@ -187,7 +186,7 @@
 
 if have_egl
    virgl_sources += vrend_winsys_egl_sources
-   virgl_depends += [gbm_dep]
+   virgl_depends += [libdrm_dep, gbm_dep]
 endif
 
 if have_glx
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/virglrenderer.c src/virglrenderer-virglrenderer-0.10.3/src/virglrenderer.c
--- orig/virglrenderer-virglrenderer-0.10.3/src/virglrenderer.c	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/virglrenderer.c	2022-10-31 13:56:09.044173900 -0700
@@ -31,7 +31,11 @@
 #include <fcntl.h>
 #include <errno.h>
 #include <unistd.h>
+#if !defined(__MINGW32__)
 #include <sys/mman.h>
+#else
+#define MAP_FAILED ((void *)-1)
+#endif

 #include "pipe/p_state.h"
 #include "util/u_format.h"
@@ -1031,11 +1035,13 @@
          res->map_size = map_size;
    } else {
       switch (res->fd_type) {
+#if !defined(__MINGW32__)
       case VIRGL_RESOURCE_FD_DMABUF:
       case VIRGL_RESOURCE_FD_SHM:
          map = mmap(NULL, res->map_size, PROT_WRITE | PROT_READ, MAP_SHARED, res->fd, 0);
          map_size = res->map_size;
          break;
+#endif
       case VIRGL_RESOURCE_FD_OPAQUE:
          ret = vkr_allocator_resource_map(res, &map, &map_size);
          break;
@@ -1065,9 +1071,12 @@
       ret = vrend_renderer_resource_unmap(res->pipe_resource);
    } else {
       switch (res->fd_type) {
+#if !defined(__MINGW32__)
       case VIRGL_RESOURCE_FD_DMABUF:
+      case VIRGL_RESOURCE_FD_SHM:
          ret = munmap(res->mapped, res->map_size);
          break;
+#endif
       case VIRGL_RESOURCE_FD_OPAQUE:
          ret = vkr_allocator_resource_unmap(res);
          break;
@@ -1146,15 +1155,17 @@

    enum virgl_resource_fd_type fd_type = VIRGL_RESOURCE_FD_INVALID;
    switch (args->fd_type) {
+#if !defined(__MINGW32__)
    case VIRGL_RENDERER_BLOB_FD_TYPE_DMABUF:
       fd_type = VIRGL_RESOURCE_FD_DMABUF;
       break;
-   case VIRGL_RENDERER_BLOB_FD_TYPE_OPAQUE:
-      fd_type = VIRGL_RESOURCE_FD_OPAQUE;
-      break;
    case VIRGL_RENDERER_BLOB_FD_TYPE_SHM:
       fd_type = VIRGL_RESOURCE_FD_SHM;
       break;
+#endif
+   case VIRGL_RENDERER_BLOB_FD_TYPE_OPAQUE:
+      fd_type = VIRGL_RESOURCE_FD_OPAQUE;
+      break;
    default:
       return -EINVAL;
    }
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_blitter.h src/virglrenderer-virglrenderer-0.10.3/src/vrend_blitter.h
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_blitter.h	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_blitter.h	2022-10-31 14:04:55.166187000 -0700
@@ -30,7 +30,7 @@
 /* shaders for blitting */

 #define FS_HEADER_GL                               \
-   "#version 130\n"                             \
+   "#version 140\n"                             \
    "// Blitter\n"                               \
    "%s"                                         \

@@ -48,7 +48,7 @@
    "precision mediump float;\n"                 \

 #define HEADER_GL                               \
-   "#version 130\n"                             \
+   "#version 140\n"                             \
    "// Blitter\n"                               \

 #define HEADER_GLES                             \
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_debug.c src/virglrenderer-virglrenderer-0.10.3/src/vrend_debug.c
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_debug.c	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_debug.c	2022-10-31 13:07:31.442604200 -0700
@@ -25,6 +25,11 @@
 #include "vrend_debug.h"
 #include "vrend_renderer.h"
 #include "util/u_debug.h"
+#ifdef __MINGW32__
+#include <process.h>
+#define setenv(a,b,c)
+#define unsetenv(a)
+#endif
 #include <stdlib.h>
 #include <stdio.h>
 
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_renderer.c src/virglrenderer-virglrenderer-0.10.3/src/vrend_renderer.c
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_renderer.c	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_renderer.c	2022-10-31 14:22:42.245136400 -0700
@@ -354,6 +354,7 @@
    uint64_t features[feat_last / 64 + 1];
 
    bool finishing : 1;
+   bool gl_apple : 1;
    bool use_gles : 1;
    bool use_core_profile : 1;
    bool use_external_blob : 1;
@@ -7065,6 +7066,8 @@
    err = glGetError();
    if (err == GL_NO_ERROR)
       return true;
+   if (err == GL_INVALID_ENUM && vrend_state.gl_apple)
+       err = glGetError();
 
    while (err != GL_NO_ERROR) {
 #ifdef CHECK_GL_ERRORS
@@ -7165,6 +7168,7 @@
       vrend_printf( "gl_version %d - compat profile\n", gl_ver);
    }
 
+   vrend_state.gl_apple = (strcmp((const char *)glGetString(GL_VENDOR), "Apple") == 0);
    vrend_state.use_integer = use_integer();
 
    init_features(gles ? 0 : gl_ver,
@@ -7442,6 +7444,7 @@
    grctx->shader_cfg.has_es31_compat = has_feature(feat_gles31_compatibility);
    grctx->shader_cfg.has_conservative_depth = has_feature(feat_conservative_depth);
    grctx->shader_cfg.use_integer = vrend_state.use_integer;
+   grctx->shader_cfg.gl_apple = vrend_state.gl_apple;
    grctx->shader_cfg.has_dual_src_blend = has_feature(feat_dual_src_blend);
    grctx->shader_cfg.has_fbfetch_coherent = has_feature(feat_framebuffer_fetch);
    grctx->shader_cfg.has_cull_distance = has_feature(feat_cull_distance);
@@ -7910,6 +7913,7 @@
 
    const bool format_can_texture_storage = has_feature(feat_texture_storage) &&
         (tex_conv_table[format].flags & VIRGL_TEXTURE_CAN_TEXTURE_STORAGE);
+   const bool format_has_storage_multisample = has_feature(feat_storage_multisample);
 
    if (format_can_texture_storage)
       gr->storage_bits |= VREND_STORAGE_GL_IMMUTABLE;
@@ -7982,7 +7986,7 @@
       }
 
       if (pr->nr_samples > 0) {
-         if (format_can_texture_storage) {
+         if (format_can_texture_storage && format_has_storage_multisample) {
             if (gr->target == GL_TEXTURE_2D_MULTISAMPLE) {
                glTexStorage2DMultisample(gr->target, pr->nr_samples,
                                          internalformat, pr->width0, pr->height0,
@@ -8846,7 +8850,7 @@
 
    if (has_feature(feat_arb_robustness))
       glReadnPixelsARB(x, y, width, height, format, type, bufSize, data);
-   else if (has_feature(feat_gles_khr_robustness))
+   else if (vrend_state.use_gles && has_feature(feat_gles_khr_robustness))
       glReadnPixelsKHR(x, y, width, height, format, type, bufSize, data);
    else
       glReadPixels(x, y, width, height, format, type, data);
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.c src/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.c
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.c	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.c	2022-10-31 14:22:42.245136400 -0700
@@ -6037,10 +6037,10 @@

       if (ctx->prog_type == TGSI_PROCESSOR_VERTEX && ctx->cfg->use_explicit_locations)
          emit_ext(glsl_strbufs, "ARB_explicit_attrib_location", "require");
-      if (ctx->prog_type == TGSI_PROCESSOR_FRAGMENT && fs_emit_layout(ctx))
+      if (ctx->prog_type == TGSI_PROCESSOR_FRAGMENT && fs_emit_layout(ctx) && !ctx->cfg->gl_apple)
          emit_ext(glsl_strbufs, "ARB_fragment_coord_conventions", "require");

-      if (ctx->ubo_used_mask)
+      if (ctx->ubo_used_mask && !ctx->cfg->gl_apple)
          emit_ext(glsl_strbufs, "ARB_uniform_buffer_object", "require");

       if (ctx->num_cull_dist_prop || ctx->key->num_in_cull || ctx->key->num_out_cull)
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.h src/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.h
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.h	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_shader.h	2022-10-31 14:22:25.824702600 -0700
@@ -235,6 +235,7 @@
    uint32_t glsl_version : 12;
    uint32_t max_draw_buffers : 4;
    uint32_t max_shader_patch_varyings : 6;
+   uint32_t gl_apple : 1;
    uint32_t use_gles : 1;
    uint32_t use_core_profile : 1;
    uint32_t use_explicit_locations : 1;
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys.c src/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys.c
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys.c	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys.c	2022-10-31 13:10:27.425291900 -0700
@@ -22,6 +22,7 @@
  *
  **************************************************************************/
 
+#include "vrend_debug.h"
 #include "vrend_winsys.h"
 
 #ifdef HAVE_EPOXY_GLX_H
diff -Nru orig/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys_gbm.h src/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys_gbm.h
--- orig/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys_gbm.h	2022-09-19 01:48:34.000000000 -0700
+++ src/virglrenderer-virglrenderer-0.10.3/src/vrend_winsys_gbm.h	2022-10-31 13:05:14.278771300 -0700
@@ -25,7 +25,9 @@
 #ifndef VIRGL_GBM_H
 #define VIRGL_GBM_H
 
+#ifdef HAVE_EPOXY_EGL_H
 #include <gbm.h>
+#endif
 #include "vrend_iov.h"
 #include "virglrenderer.h"
 
@@ -96,6 +98,7 @@
  * query. If fd < 0, the gbm device was opened with the fd provided by the
  * (*get_drm_fd) hook.
  */
+#ifdef HAVE_EPOXY_EGL_H
 struct virgl_gbm {
    int fd;
    struct gbm_device *device;
@@ -123,4 +126,5 @@
 bool virgl_gbm_external_allocation_preferred(uint32_t flags);
 bool virgl_gbm_gpu_import_required(uint32_t flags);
 
+#endif //HAVE_EPOXY_EGL_H
 #endif
